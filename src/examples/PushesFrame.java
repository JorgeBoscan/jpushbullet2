package examples;

import java.util.List;
import java.util.prefs.Preferences;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.SwingUtilities;
import net.iharder.jpushbullet2.*;

/**
 *
 * @author Robert.Harder
 */
public class PushesFrame extends javax.swing.JFrame {
    
    private final static String API_KEY_PREF = "api_key";

    //private DefaultListModel pushListModel = new DefaultListModel();
    private final DefaultListModel pushListModel = new DefaultListModel();
    private String api_key = Preferences.userNodeForPackage(PushesFrame.class).get(API_KEY_PREF, "API Key");

    public String getApi_key() {
        return api_key;
    }

    public void setApi_key(String api_key) {
        this.api_key = api_key;
    }
    private PushbulletClient pbClient;

    public DefaultListModel getPushListModel() {
        return pushListModel;
    }

    /**
     * Creates new form PushesFrame
     */
    public PushesFrame() {
        initComponents();
        myInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pushes");

        jList1.setModel(getPushListModel());
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("API Key:");

        jTextField1.setText(getApi_key());

        jButton1.setText("Listen for Pushes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        final String api = this.jTextField1.getText();
        final JButton src = (JButton)evt.getSource();
        final String srcText = src.getText();
        src.setText("Retrieving...");
        src.setEnabled(false);
        Thread t = new Thread( new Runnable(){
            public void run(){
                Preferences.userNodeForPackage(PushesFrame.class).put(API_KEY_PREF, api);
                pbClient = new PushbulletClient( api );
                pbClient.addPushbulletListener( new AbstractPushbulletListener() {
                    @Override
                    public void pushReceived(PushbulletEvent pushEvent) {
                        handlePushReceivedEvent( pushEvent );
                    }
                } );
                pbClient.startWebsocket();


                final DefaultListModel model = getPushListModel();
                pbClient.getPushesAsync(new Callback<List<Push>>() {
                    @Override
                    public void completed(final List<Push> pushes, PushbulletException ex) {
                        SwingUtilities.invokeLater( new Runnable() {
                            @Override
                            public void run() {
                                for( Push p : pushes ){
                                    model.addElement(p);
                                }
                                src.setText(srcText);
                                src.setEnabled(true);
                            }
                        }); // end SwingUtilities
                    }   // end completed
                });
            }   // end run
        }); // end runnable, thread
        t.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PushesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PushesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PushesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PushesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PushesFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void myInitComponents() {

    }
    public void handlePushReceivedEvent(final PushbulletEvent pushEvent){
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                DefaultListModel model = getPushListModel();
                for( Push p : pushEvent.getPushes() ){
                    model.addElement(p);
                }
            }
        });
    }
}   // end class

